{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf190
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 \
const XLively_COMMS = 1;\
const Prawl_COMMS = 1;\
const Second_Imp =0;\
\
rain_sensor <- hardware.pin9; \
OnRainAlert <-0;\
// configure pin\
rain_sensor.configure(ANALOG_IN);\
\
const Alarm_limit = 1000;\
rainbaseline <- rain_sensor.read();\
server.log ("Baseline Rainlevel=" + rainbaseline);\
\
\
function poll() \{\
  // read pin and log\
  local r= rain_sensor.read();\
  local dr  = rainbaseline -r;\
  \
\
  if (XLively_COMMS==1) agent.send("SendToXively", \{id = "RainSensor", value = r\});\
  \
  if (dr >Alarm_limit)  \
     \{\
          if (Prawl_COMMS==1) agent.send("rain_alarm", dr*100/rainbaseline);\
          if (Second_Imp==1) agent.send("notify_imp", 1);\
          OnRainAlert =1;\
     \}\
  if ((dr<= Alarm_limit) && (OnRainAlert==1))\
    \{\
       if (Prawl_COMMS==1) agent.send("rain_off", dr*100/rainbaseline);\
       if (Second_Imp==1)  agent.send("notify_imp", 0);\
       OnRainAlert =0;\
    \}\
  imp.wakeup(10, poll);\
\}\
 \
function check_Sensor(rain_value) \{\
  local r= rain_sensor.read();\
  local dr  = rainbaseline -r;\
  agent.send("rain_level_return", dr);\
  if (Second_Imp==1)agent.send("notify_imp", 1);\
\} \
\
function Reset_Baseline(rain_value) \{\
rainbaseline <- rain_sensor.read();\
server.log ("Baseline Rainlevel=" + rainbaseline);\
\} \
\
\
 \
// start the loop\
poll();\
\
\
agent.on("rain_level_request", check_Sensor);\
agent.on("reset_baseline", Reset_Baseline);\
\
}